[{"/usr/src/app/src/functions/args_validation.ts":"1","/usr/src/app/src/functions/date_validation.ts":"2","/usr/src/app/src/index.ts":"3"},{"size":941,"mtime":1676754165154,"results":"4","hashOfConfig":"5"},{"size":560,"mtime":1676752113931,"results":"6","hashOfConfig":"5"},{"size":4249,"mtime":1676757647927,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yj8enp",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/usr/src/app/src/functions/args_validation.ts",[],[],"/usr/src/app/src/functions/date_validation.ts",[],["17"],"/usr/src/app/src/index.ts",[],[],{"ruleId":"18","severity":1,"message":"19","line":12,"column":72,"nodeType":"20","messageId":"21","endLine":12,"endColumn":75,"suggestions":"22","suppressions":"23"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["24","25"],["26"],{"messageId":"27","fix":"28","desc":"29"},{"messageId":"30","fix":"31","desc":"32"},{"kind":"33","justification":"34"},"suggestUnknown",{"range":"35","text":"36"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"35","text":"37"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.","directive","",[387,390],"unknown","never"]